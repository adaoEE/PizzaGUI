/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pizza;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;

/**
 *
 * @author 958027611
 */
public class Pizza extends javax.swing.JFrame {

    /**
     * Creates new form Pizza
     */
    public Pizza() {
        initComponents();
        //set the Calculate button as default
        this.getRootPane().setDefaultButton(calculateJButton);
        //center the form on startup
        this.setLocationRelativeTo(null);
        //set icon for the form
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("src/Pizza/pizzaicon.png"));
        //set background color
        this.getContentPane().setBackground(new Color(101, 175, 244)); //Color.getHSBColor(350, 2000, 200));
        ((JSpinner.DefaultEditor) pizzaSliceJSpinner.getEditor()).getTextField().setEditable(false);
        ((JSpinner.DefaultEditor) friesJSpinner.getEditor()).getTextField().setEditable(false);
        ((JSpinner.DefaultEditor) drinksJSpinner.getEditor()).getTextField().setEditable(false);
        //set Date for the title
        setDate();
        // name
        String fileName = "src/Pizza/PizzaTypes.txt"; // file Name
        readFromFile(fileName);

    }

    private void setDate() {
        DateFormat dateFormatter = new SimpleDateFormat("MM/dd/yyyy");
        Date now = new Date();
        this.setTitle("Lab#7--Pizza Feast--" + dateFormatter.format(now));

    }

    private void readFromFile(String fileName) {
        try {
            //        use instead Scanner class to avoid this complexity
            FileReader freader = new FileReader(fileName);
            BufferedReader inputFile = new BufferedReader(freader);
            //Read the first name from th file.
            String patientName = inputFile.readLine();

            //add patient name to Jcombobox
            while (patientName != null) {
                placesJComboBox.addItem(patientName);
                patientName = inputFile.readLine();

            }
        } catch (FileNotFoundException exp) // file not found - bring JFileChooser
        {
            // exp.printStackTrace();
            JFileChooser chooser = new JFileChooser("src/Pizza/");
            int choice = chooser.showOpenDialog(null);
            if (choice == JFileChooser.APPROVE_OPTION) {
                File chosenFile = chooser.getSelectedFile();
                readFromFile("src/Pizza/" + chosenFile.getName());
            }
        } catch (IOException exp) //catch reading error
        {
            JOptionPane.showMessageDialog(null, "Cannot find or open file", "File Read Error", JOptionPane.ERROR_MESSAGE);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleJLabel = new javax.swing.JLabel();
        eLogoJLabel = new javax.swing.JLabel();
        extrasJPanel = new javax.swing.JPanel();
        cheeseJCheckBox = new javax.swing.JCheckBox();
        cheeseJLabel = new javax.swing.JLabel();
        deepDishJCheckBox = new javax.swing.JCheckBox();
        deepDishJLabel = new javax.swing.JLabel();
        sauceJCheckBox = new javax.swing.JCheckBox();
        sauceJLabel = new javax.swing.JLabel();
        displayJScrollPane = new javax.swing.JScrollPane();
        outJTextArea = new javax.swing.JTextArea();
        controlJPanel = new javax.swing.JPanel();
        placesJComboBox = new javax.swing.JComboBox<>();
        calculateJButton = new javax.swing.JButton();
        newOrderJButton = new javax.swing.JButton();
        choiceJFormattedTextField = new javax.swing.JPanel();
        pizzaSliceJLabel = new javax.swing.JLabel();
        pizzaSliceJSpinner = new javax.swing.JSpinner();
        friesJLabel = new javax.swing.JLabel();
        friesJSpinner = new javax.swing.JSpinner();
        drinksJLabel = new javax.swing.JLabel();
        drinksJSpinner = new javax.swing.JSpinner();
        polygonsJMenuBar = new javax.swing.JMenuBar();
        fileJMenu = new javax.swing.JMenu();
        clearJMenuItem = new javax.swing.JMenuItem();
        printJMenuItem = new javax.swing.JMenuItem();
        printJMenuItem1 = new javax.swing.JMenuItem();
        fileJSeparator = new javax.swing.JPopupMenu.Separator();
        quitJMenuItem = new javax.swing.JMenuItem();
        extrasJMenu = new javax.swing.JMenu();
        cheeseJCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();
        deepDishJCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();
        sauceJCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();
        calculateJMenu = new javax.swing.JMenu();
        calculateJjMenuItem = new javax.swing.JMenuItem();
        helpJMenu = new javax.swing.JMenu();
        aboutJMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        titleJLabel.setBackground(new java.awt.Color(101, 175, 244));
        titleJLabel.setFont(new java.awt.Font("Harrington", 1, 36)); // NOI18N
        titleJLabel.setText("Pizza Feast");

        eLogoJLabel.setBackground(new java.awt.Color(101, 175, 244));
        eLogoJLabel.setFont(new java.awt.Font("Verdana", 1, 30)); // NOI18N
        eLogoJLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        eLogoJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pizza/pizzaicon.png"))); // NOI18N
        eLogoJLabel.setText("Logo");
        eLogoJLabel.setMaximumSize(new java.awt.Dimension(200, 200));
        eLogoJLabel.setMinimumSize(new java.awt.Dimension(200, 200));
        eLogoJLabel.setPreferredSize(new java.awt.Dimension(200, 200));

        extrasJPanel.setBackground(new java.awt.Color(101, 175, 244));
        extrasJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Extras"));
        extrasJPanel.setLayout(new java.awt.GridLayout(3, 2, 5, 5));

        cheeseJCheckBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cheeseJCheckBox.setMnemonic('h');
        cheeseJCheckBox.setText("Cheese");
        cheeseJCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cheeseJCheckBoxActionPerformed(evt);
            }
        });
        extrasJPanel.add(cheeseJCheckBox);

        cheeseJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cheeseJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cheeseJLabel.setText("$0.50");
        extrasJPanel.add(cheeseJLabel);

        deepDishJCheckBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deepDishJCheckBox.setMnemonic('D');
        deepDishJCheckBox.setText("Deep Dish");
        deepDishJCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deepDishJCheckBoxActionPerformed(evt);
            }
        });
        extrasJPanel.add(deepDishJCheckBox);

        deepDishJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deepDishJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        deepDishJLabel.setText("$1.00");
        extrasJPanel.add(deepDishJLabel);

        sauceJCheckBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sauceJCheckBox.setMnemonic('S');
        sauceJCheckBox.setText("Sauce");
        sauceJCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sauceJCheckBoxActionPerformed(evt);
            }
        });
        extrasJPanel.add(sauceJCheckBox);

        sauceJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sauceJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sauceJLabel.setText("$0.25");
        extrasJPanel.add(sauceJLabel);

        outJTextArea.setEditable(false);
        outJTextArea.setColumns(20);
        outJTextArea.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
        outJTextArea.setRows(5);
        outJTextArea.setWrapStyleWord(true);
        displayJScrollPane.setViewportView(outJTextArea);

        controlJPanel.setBackground(new java.awt.Color(101, 175, 244));
        controlJPanel.setLayout(new java.awt.GridLayout(3, 1));

        placesJComboBox.setPreferredSize(new java.awt.Dimension(100, 20));
        placesJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placesJComboBoxActionPerformed(evt);
            }
        });
        controlJPanel.add(placesJComboBox);

        calculateJButton.setBackground(new java.awt.Color(255, 255, 153));
        calculateJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        calculateJButton.setText("Calculate Bill");
        calculateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(calculateJButton);

        newOrderJButton.setBackground(new java.awt.Color(255, 255, 153));
        newOrderJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        newOrderJButton.setMnemonic('r');
        newOrderJButton.setText("New Order");
        newOrderJButton.setToolTipText("Clear form");
        newOrderJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newOrderJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(newOrderJButton);

        choiceJFormattedTextField.setBackground(new java.awt.Color(101, 175, 244));
        choiceJFormattedTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Choice", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        choiceJFormattedTextField.setName(""); // NOI18N
        choiceJFormattedTextField.setLayout(new java.awt.GridLayout(3, 2));

        pizzaSliceJLabel.setText("Pizza Slices:");
        choiceJFormattedTextField.add(pizzaSliceJLabel);

        pizzaSliceJSpinner.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pizzaSliceJSpinner.setModel(new javax.swing.SpinnerNumberModel(Byte.valueOf((byte)0), Byte.valueOf((byte)0), Byte.valueOf((byte)50), Byte.valueOf((byte)1)));
        pizzaSliceJSpinner.setEditor(new javax.swing.JSpinner.NumberEditor(pizzaSliceJSpinner, ""));
        choiceJFormattedTextField.add(pizzaSliceJSpinner);

        friesJLabel.setText("Fries:");
        choiceJFormattedTextField.add(friesJLabel);

        friesJSpinner.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        friesJSpinner.setModel(new javax.swing.SpinnerNumberModel(Byte.valueOf((byte)0), Byte.valueOf((byte)0), Byte.valueOf((byte)50), Byte.valueOf((byte)1)));
        choiceJFormattedTextField.add(friesJSpinner);

        drinksJLabel.setText("Drinks:");
        choiceJFormattedTextField.add(drinksJLabel);

        drinksJSpinner.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        drinksJSpinner.setModel(new javax.swing.SpinnerNumberModel(Byte.valueOf((byte)0), Byte.valueOf((byte)0), Byte.valueOf((byte)50), Byte.valueOf((byte)1)));
        choiceJFormattedTextField.add(drinksJSpinner);

        polygonsJMenuBar.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N

        fileJMenu.setText("File");
        fileJMenu.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N

        clearJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK));
        clearJMenuItem.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        clearJMenuItem.setMnemonic('r');
        clearJMenuItem.setText("New Order");
        clearJMenuItem.setToolTipText("Clear form");
        clearJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(clearJMenuItem);

        printJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        printJMenuItem.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        printJMenuItem.setMnemonic('P');
        printJMenuItem.setText("Print");
        printJMenuItem.setToolTipText("Print form");
        printJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(printJMenuItem);

        printJMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.ALT_MASK));
        printJMenuItem1.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        printJMenuItem1.setMnemonic('F');
        printJMenuItem1.setText("Print Form");
        printJMenuItem1.setToolTipText("Print form");
        printJMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printJMenuItem1ActionPerformed(evt);
            }
        });
        fileJMenu.add(printJMenuItem1);
        fileJMenu.add(fileJSeparator);

        quitJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.ALT_MASK));
        quitJMenuItem.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        quitJMenuItem.setMnemonic('Q');
        quitJMenuItem.setText("Quit");
        quitJMenuItem.setToolTipText("Exit application");
        quitJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(quitJMenuItem);

        polygonsJMenuBar.add(fileJMenu);

        extrasJMenu.setMnemonic('E');
        extrasJMenu.setText("Extras");
        extrasJMenu.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N

        cheeseJCheckBoxMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.ALT_MASK));
        cheeseJCheckBoxMenuItem.setText("Cheese");
        cheeseJCheckBoxMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cheeseJCheckBoxMenuItemActionPerformed(evt);
            }
        });
        extrasJMenu.add(cheeseJCheckBoxMenuItem);

        deepDishJCheckBoxMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK));
        deepDishJCheckBoxMenuItem.setText("Deep Dish");
        deepDishJCheckBoxMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deepDishJCheckBoxMenuItemActionPerformed(evt);
            }
        });
        extrasJMenu.add(deepDishJCheckBoxMenuItem);

        sauceJCheckBoxMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        sauceJCheckBoxMenuItem.setText("Sauce");
        sauceJCheckBoxMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sauceJCheckBoxMenuItemActionPerformed(evt);
            }
        });
        extrasJMenu.add(sauceJCheckBoxMenuItem);

        polygonsJMenuBar.add(extrasJMenu);

        calculateJMenu.setMnemonic('t');
        calculateJMenu.setText("Calculate");
        calculateJMenu.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N

        calculateJjMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        calculateJjMenuItem.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        calculateJjMenuItem.setText("Calculate");
        calculateJjMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateJjMenuItemActionPerformed(evt);
            }
        });
        calculateJMenu.add(calculateJjMenuItem);

        polygonsJMenuBar.add(calculateJMenu);

        helpJMenu.setText("Help");
        helpJMenu.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N

        aboutJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        aboutJMenuItem.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        aboutJMenuItem.setMnemonic('A');
        aboutJMenuItem.setText("About");
        aboutJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutJMenuItemActionPerformed(evt);
            }
        });
        helpJMenu.add(aboutJMenuItem);

        polygonsJMenuBar.add(helpJMenu);

        setJMenuBar(polygonsJMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(titleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(eLogoJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(controlJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(253, 253, 253))))
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(displayJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 40, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(422, Short.MAX_VALUE)
                    .addComponent(extrasJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(42, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(23, 23, 23)
                    .addComponent(choiceJFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(458, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(titleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(eLogoJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(controlJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(displayJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(132, Short.MAX_VALUE)
                    .addComponent(extrasJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(211, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(133, 133, 133)
                    .addComponent(choiceJFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(210, Short.MAX_VALUE)))
        );

        choiceJFormattedTextField.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearJMenuItemActionPerformed
        // Call the clearJButton to clear all textfields
        newOrderJButtonActionPerformed(evt);
    }//GEN-LAST:event_clearJMenuItemActionPerformed

    private void printJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printJMenuItemActionPerformed
        // call the printJAction
        PrintUtilities.printComponent(this);

        //printJButton.doClick();
    }//GEN-LAST:event_printJMenuItemActionPerformed

    private void quitJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitJMenuItemActionPerformed
        // End the appication
        System.exit(0);
    }//GEN-LAST:event_quitJMenuItemActionPerformed

    private void calculateJjMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateJjMenuItemActionPerformed
        // call the calculateJButton to do the calculations
        calculateJButtonActionPerformed(evt);
    }//GEN-LAST:event_calculateJjMenuItemActionPerformed

    private void aboutJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutJMenuItemActionPerformed
        // Information about Regular Polygons sofware - The About Form
        AboutJDialog myAbout = new AboutJDialog(this, true);
        myAbout.setVisible(true);


    }//GEN-LAST:event_aboutJMenuItemActionPerformed

    private void placesJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placesJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_placesJComboBoxActionPerformed

    private void calculateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateJButtonActionPerformed
        double total = 0.0;

        int slices = Integer.parseInt(pizzaSliceJSpinner.getValue().toString());
        int fries = Integer.parseInt(friesJSpinner.getValue().toString());
        int drinks = Integer.parseInt(drinksJSpinner.getValue().toString());
         if (slices == 0 & fries == 0 & drinks ==0)
         {
         JOptionPane.showMessageDialog(null, "Order at least one thing","",JOptionPane.ERROR_MESSAGE);
         }
         else{
        if (pizzaSliceJSpinner.getValue().toString() == "0") {
            cheeseJCheckBox.setSelected(false);
            deepDishJCheckBox.setSelected(false);
            sauceJCheckBox.setSelected(false);
        }

        PizzaBill myBill = new PizzaBill(cheeseJCheckBox.isSelected(), deepDishJCheckBox.isSelected(),
                sauceJCheckBox.isSelected(), slices, fries, drinks);
        total = myBill.calculatePizzaBill();

        //display Textfield
        outJTextArea.setText(myBill.displayBill().toString());
         }
    }//GEN-LAST:event_calculateJButtonActionPerformed

    private void newOrderJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newOrderJButtonActionPerformed
        // TODO add your handling code here:
        outJTextArea.setText("");
        calculateJButton.requestFocus();
    }//GEN-LAST:event_newOrderJButtonActionPerformed

    private void cheeseJCheckBoxMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cheeseJCheckBoxMenuItemActionPerformed
        // TODO add your handling code here:
        if (cheeseJCheckBoxMenuItem.isSelected()) {

            cheeseJCheckBox.setSelected(true);
        } else {
            cheeseJCheckBox.setSelected(false);
        }

    }//GEN-LAST:event_cheeseJCheckBoxMenuItemActionPerformed

    private void deepDishJCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deepDishJCheckBoxActionPerformed
        // TODO add your handling code here:
        if (deepDishJCheckBox.isSelected()) {

           deepDishJCheckBoxMenuItem.setSelected(true);
        } else {
           deepDishJCheckBoxMenuItem.setSelected(false);
        }
        
    }//GEN-LAST:event_deepDishJCheckBoxActionPerformed

    private void sauceJCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sauceJCheckBoxActionPerformed
        // TODO add your handling code here
         if (sauceJCheckBox.isSelected()) {

           sauceJCheckBoxMenuItem.setSelected(true);
        } else {
           sauceJCheckBoxMenuItem.setSelected(false);
        }
        
        
    }//GEN-LAST:event_sauceJCheckBoxActionPerformed

    private void cheeseJCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cheeseJCheckBoxActionPerformed
        // TODO add your handling code here:
        if (cheeseJCheckBox.isSelected()) {

            cheeseJCheckBoxMenuItem.setSelected(true);
        } else {
            cheeseJCheckBoxMenuItem.setSelected(false);
        }
        
    }//GEN-LAST:event_cheeseJCheckBoxActionPerformed

    private void deepDishJCheckBoxMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deepDishJCheckBoxMenuItemActionPerformed
        // TODO add your handling code here:
         if (deepDishJCheckBoxMenuItem.isSelected()) {

            deepDishJCheckBox.setSelected(true);
        } else {
            deepDishJCheckBox.setSelected(false);
        }

    }//GEN-LAST:event_deepDishJCheckBoxMenuItemActionPerformed

    private void sauceJCheckBoxMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sauceJCheckBoxMenuItemActionPerformed
        // TODO add your handling code here:
         if (sauceJCheckBoxMenuItem.isSelected()) {

            sauceJCheckBox.setSelected(true);
        } else {
            sauceJCheckBox.setSelected(false);
        }

    }//GEN-LAST:event_sauceJCheckBoxMenuItemActionPerformed

    private void printJMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printJMenuItem1ActionPerformed
        try {
            // TODO add your handling code here:
            outJTextArea.print();
        } catch (PrinterException ex) {
           ex.printStackTrace();
        }
        
           
    }//GEN-LAST:event_printJMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pizza().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutJMenuItem;
    private javax.swing.JButton calculateJButton;
    private javax.swing.JMenu calculateJMenu;
    private javax.swing.JMenuItem calculateJjMenuItem;
    private javax.swing.JCheckBox cheeseJCheckBox;
    private javax.swing.JCheckBoxMenuItem cheeseJCheckBoxMenuItem;
    private javax.swing.JLabel cheeseJLabel;
    private javax.swing.JPanel choiceJFormattedTextField;
    private javax.swing.JMenuItem clearJMenuItem;
    private javax.swing.JPanel controlJPanel;
    private javax.swing.JCheckBox deepDishJCheckBox;
    private javax.swing.JCheckBoxMenuItem deepDishJCheckBoxMenuItem;
    private javax.swing.JLabel deepDishJLabel;
    private javax.swing.JScrollPane displayJScrollPane;
    private javax.swing.JLabel drinksJLabel;
    private javax.swing.JSpinner drinksJSpinner;
    private javax.swing.JLabel eLogoJLabel;
    private javax.swing.JMenu extrasJMenu;
    private javax.swing.JPanel extrasJPanel;
    private javax.swing.JMenu fileJMenu;
    private javax.swing.JPopupMenu.Separator fileJSeparator;
    private javax.swing.JLabel friesJLabel;
    private javax.swing.JSpinner friesJSpinner;
    private javax.swing.JMenu helpJMenu;
    private javax.swing.JButton newOrderJButton;
    private javax.swing.JTextArea outJTextArea;
    private javax.swing.JLabel pizzaSliceJLabel;
    private javax.swing.JSpinner pizzaSliceJSpinner;
    private javax.swing.JComboBox<String> placesJComboBox;
    private javax.swing.JMenuBar polygonsJMenuBar;
    private javax.swing.JMenuItem printJMenuItem;
    private javax.swing.JMenuItem printJMenuItem1;
    private javax.swing.JMenuItem quitJMenuItem;
    private javax.swing.JCheckBox sauceJCheckBox;
    private javax.swing.JCheckBoxMenuItem sauceJCheckBoxMenuItem;
    private javax.swing.JLabel sauceJLabel;
    private javax.swing.JLabel titleJLabel;
    // End of variables declaration//GEN-END:variables
}
